import{r as t,h as e,H as i}from"./p-ddbb1df8.js";import"./p-bec3b19e.js";import"./p-58d13c5e.js";import"./p-f3a0c163.js";import{l as s}from"./p-d5d1c985.js";import{s as a}from"./p-38942298.js";import{q as n,m as o,a as l,t as r}from"./p-84cb821d.js";const h=class{constructor(e){t(this,e),this.variableOptions=["Elevation","MaxTemperature","MinTemperature","Precipitation","Wind","RelativeHumidity","Solar"],this.colorScheme=["#4575b4","#abd9e9","#fee090","#f46d43"],this.timeBy="Month",this.textureDefinitions=['this.textures.lines().orientation("4/8").size(1000)','this.textures.lines().orientation("2/8").size(10)','this.textures.lines().orientation("8/8").size(10)','this.textures.lines().orientation("6/8").size(10)'],this.categorizationMethod="value",this.categorizedValueMap=new Map,this.mapDisplayMonth1="Jan",this.mapDisplayMonth2="Jan"}async connectedCallback(){this.SQL=await a({locateFile:t=>"./assets/sql.js/"+t})}render(){var t;return e(i,null,e("ion-header",null,e("ion-toolbar",{color:"primary"},e("ion-title",null,"Weather Vis"," - "+((null===(t=this.file)||void 0===t?void 0:t.name)||"No File Opened")),e("ion-buttons",{slot:"start"},e("ion-back-button",{defaultHref:"/"})),e("ion-buttons",{slot:"end"},e("ion-button",{title:"Open",onClick:()=>this.fileInputElement.click()},e("ion-icon",{slot:"icon-only",name:"open"}))))),e("ion-content",{class:"ion-padding"},e("ion-item",{disabled:!this.file},e("ion-label",null,"Categorization Method"),e("ion-select",{value:this.categorizationMethod,onIonChange:async({detail:t})=>{this.categorizationMethod=t.value,this.updateData(1),this.updateData(2)}},e("ion-select-option",null,"quantile"),e("ion-select-option",null,"value"))),e("ion-item",{disabled:!this.file},e("ion-label",null,"Variables"),e("ion-select",{multiple:!0,onIonChange:async({detail:t})=>{this.selectedVariables=t.value,this.updateData(1),this.updateData(2)}},this.variableOptions.map(t=>e("ion-select-option",null,t)))),e("ion-item",{disabled:!this.file},e("ion-label",null,"Time By"),e("ion-select",{value:this.timeBy,onIonChange:async({detail:t})=>{this.timeBy=t.value,this.updateData(1),this.updateData(2)}},e("ion-select-option",null,"Day"),e("ion-select-option",null,"Week"),e("ion-select-option",null,"Month"),e("ion-select-option",null,"Quarter "))),e("ion-item",{disabled:!this.file},e("ion-label",null,"Map 1 Display Month"),e("ion-select",{value:this.mapDisplayMonth1,onIonChange:async({detail:t})=>{this.mapDisplayMonth1=t.value,this.updateData(1)}},["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"].map(t=>e("ion-select-option",null,t)))),e("ion-item",{disabled:!this.file},e("ion-label",null,"Map 2 Display Month"),e("ion-select",{value:this.mapDisplayMonth2,onIonChange:async({detail:t})=>{this.mapDisplayMonth2=t.value,this.updateData(2)}},["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"].map(t=>e("ion-select-option",null,t)))),e("div",null,e("s-set-vis",{ref:t=>this.setVisElement=t,"parallel-sets-ribbon-tension":.5,parallelSetsDimensions:[""],parallelSetsMaxSegmentLimit:12,parallelSetsTexutureDefinitions:this.textureDefinitions,parallelSetsColorScheme:this.colorScheme,"dark-mode":JSON.parse(localStorage.getItem("isDarkModeEnabled"))}),e("iframe",{width:"600",height:"600",style:{border:"0"},ref:async t=>{this.mapIframeElement=t;const e=await(await fetch("./assets/map.html")).text();t.contentDocument.querySelector("div#map")||(t.contentDocument.open(),t.contentDocument.write(e),t.contentDocument.close(),window.addEventListener("message",e=>{if(e.source===this.mapIframeElement.contentWindow){const i=e.data;switch(i.type){case"hello":t.contentWindow.postMessage({type:"view center point",info:[0,0]},"*");break;case"select rect":this.updateData(1,i.info)}}}))}})),e("div",null,e("s-set-vis",{ref:t=>this.setVisElement2=t,"parallel-sets-ribbon-tension":.5,parallelSetsDimensions:[""],parallelSetsMaxSegmentLimit:12,parallelSetsTexutureDefinitions:this.textureDefinitions,parallelSetsColorScheme:this.colorScheme,"dark-mode":JSON.parse(localStorage.getItem("isDarkModeEnabled"))}),e("iframe",{width:"600",height:"600",style:{border:"0"},ref:async t=>{this.mapIframeElement2=t;const e=await(await fetch("./assets/map.html")).text();t.contentDocument.querySelector("div#map")||(t.contentDocument.open(),t.contentDocument.write(e),t.contentDocument.close(),window.addEventListener("message",e=>{if(e.source===this.mapIframeElement2.contentWindow){const i=e.data;switch(i.type){case"hello":t.contentWindow.postMessage({type:"view center point",info:[0,0]},"*");break;case"select rect":this.updateData(2,i.info)}}}))}}))),e("input",{id:"file-input",type:"file",ref:t=>this.fileInputElement=t,onInput:async({target:t})=>{var e;this.file=null===(e=t.files)||void 0===e?void 0:e[0];const i=await s.create({message:`Opening ${this.file.name}...`});await i.present();const a=await this.file.arrayBuffer();this.DB=new this.SQL.Database(new Uint8Array(a)),await i.dismiss()}}))}async updateData(t,e){const i=await this.queryData(this.selectedVariables,this.timeBy,e);if(1===t){const t=i.filter(t=>t.Date===this.mapDisplayMonth1).map(t=>({latitude:t.Latitude,longitude:t.Longitude,value:t["_"+this.selectedVariables[0]],secondaryValue:t["_"+this.selectedVariables[1]]})),e=this.categorizedValueMap.get(this.selectedVariables[0]).sort((t,e)=>{if(t.match(/[1-9] ~ [1-9]/))return+t.split(" ~ ")[0]-+e.split(" ~ ")[0]}).reduce((t,e,i)=>(t[e]=this.colorScheme[i],t),{}),s=this.categorizedValueMap.get(this.selectedVariables[1]).sort((t,e)=>{if(t.match(/[1-9] ~ [1-9]/))return+t.split(" ~ ")[0]-+e.split(" ~ ")[0]}).reduce((t,e,i)=>(t[e]=this.textureDefinitions[i],t),{});t.forEach(t=>{t.value=e[t.value],t.secondaryValue=s[t.secondaryValue]}),this.mapIframeElement.contentWindow.postMessage({type:"highlight",info:{data:t,marginLatitude:.312,marginLongitude:.312,legendInnerHTML:`<h4>${this.mapDisplayMonth1}</h4>${Object.entries(e).map(([t,e])=>`<i style="background: ${e}"></i><span>${t}</span><br/>`).join("")}`}},"*"),this.mapIframeElement.contentWindow.postMessage({type:"view center point",info:{location:[(this.datasetInfo.maxLatitude+this.datasetInfo.minLatitude)/2,(this.datasetInfo.maxLongitude+this.datasetInfo.minLongitude)/2],zoom:6}},"*"),this.setVisElement.data=i,this.setVisElement.parallelSetsDimensions=this.selectedVariables.map(t=>"_"+t).concat(["Date"]),this.setVisElement.statisticsPlotGroupDefinitions=this.selectedVariables.map(t=>({dimensionName:t,visType:"box"}))}else if(2===t){const t=i.filter(t=>t.Date===this.mapDisplayMonth2).map(t=>({latitude:t.Latitude,longitude:t.Longitude,value:t["_"+this.selectedVariables[0]],secondaryValue:t["_"+this.selectedVariables[1]]})),e=this.categorizedValueMap.get(this.selectedVariables[0]).reduce((t,e,i)=>(t[e]=this.colorScheme[i],t),{}),s=this.categorizedValueMap.get(this.selectedVariables[1]).reduce((t,e,i)=>(t[e]=this.textureDefinitions[i],t),{});t.forEach(t=>{t.value=e[t.value],t.secondaryValue=s[t.secondaryValue]}),this.mapIframeElement2.contentWindow.postMessage({type:"highlight",info:{data:t,marginLatitude:.312,marginLongitude:.312,legendInnerHTML:`<h4>${this.mapDisplayMonth2}</h4>${Object.entries(e).map(([t,e])=>`<i style="background: ${e}"></i><span>${t}</span><br/>`).join("")}`}},"*"),this.mapIframeElement2.contentWindow.postMessage({type:"view center point",info:{location:[(this.datasetInfo.maxLatitude+this.datasetInfo.minLatitude)/2,(this.datasetInfo.maxLongitude+this.datasetInfo.minLongitude)/2],zoom:6}},"*"),this.setVisElement2.data=i,this.setVisElement2.parallelSetsDimensions=this.selectedVariables.map(t=>"_"+t).concat(["Date"]),this.setVisElement2.statisticsPlotGroupDefinitions=this.selectedVariables.map(t=>({dimensionName:t,visType:"box"}))}}async queryData(t,e,i){var a,h;let u=[];if((null==t?void 0:t.length)>0&&e){const c=await s.create({message:"Qeurying data..."});let d,p;switch(await c.present(),e){case"Day":d="select Date, Latitude, Longitude, "+t.join(", ")+" from weather",i&&(d+=` where Latitude >= ${i.minLat} and Latitude <= ${i.maxLat} and Longitude >= ${i.minLon} and Longitude <= ${i.maxLon}`);break;case"Week":case"Month":case"Quarter":d="select substr(Date, 0, 8) as Date, Latitude, Longitude, "+t.map(t=>`avg(${t}) as ${t}`).join(", ")+" from weather",i&&(d+=` where Latitude >= ${i.minLat} and Latitude <= ${i.maxLat} and Longitude >= ${i.minLon} and Longitude <= ${i.maxLon}`),d+=" group by substr(Date, 0, 8), Latitude, Longitude"}if(p=null===(a=this.DB.exec(d))||void 0===a?void 0:a[0],u=null==p?void 0:p.values.map(t=>{const e={};for(let i=0;i<t.length;i++)e[p.columns[i]]="Date"===p.columns[i]?this.obtainDateString(t[i]):+t[i];return e}),u)if(this.categorizedValueMap=new Map,"quantile"===this.categorizationMethod){const e={};t.forEach(t=>e[t]=n().domain(u.map(e=>e[t])).range([.25,.5,.75,1])),t.forEach(t=>{const i=e[t].quantiles(),s=u.map(e=>e[t]),a=o(s),n=l(s);this.categorizedValueMap.set(t,[`${a.toFixed(2)} ~ ${(+i[0]).toFixed(2)}`,`${(+i[0]).toFixed(2)} ~ ${(+i[1]).toFixed(2)}`,`${(+i[1]).toFixed(2)} ~ ${(+i[2]).toFixed(2)}`,`${(+i[2]).toFixed(2)} ~ ${n.toFixed(2)}`])});const i=(t,e)=>{switch(e){case.25:return this.categorizedValueMap.get(t)[0];case.5:return this.categorizedValueMap.get(t)[1];case.75:return this.categorizedValueMap.get(t)[2];case 1:return this.categorizedValueMap.get(t)[3]}};u.forEach(s=>t.forEach(t=>s["_"+t]=i(t,e[t](s[t])))),t.forEach(t=>{this.categorizedValueMap.set(t,this.categorizedValueMap.get(t).filter(e=>u.filter(i=>i["_"+t]===e).length>0))})}else if("value"===this.categorizationMethod){const e={},i={};t.forEach(t=>{const s=u.map(e=>e[t]),a=o(s),n=l(s),h=[a,a+.25*(n-a),a+.5*(n-a),a+.75*(n-a),n];i[t]=h.map(t=>t.toFixed(2)),e[t]=r().domain(h).range([0,1,2,3]),this.categorizedValueMap.set(t,[`${h[0].toFixed(2)} ~ ${h[1].toFixed(2)}`,`${h[1].toFixed(2)} ~ ${h[2].toFixed(2)}`,`${h[2].toFixed(2)} ~ ${h[3].toFixed(2)}`,`${h[3].toFixed(2)} ~ ${h[4].toFixed(2)}`])}),u.forEach(i=>t.forEach(t=>i["_"+t]=this.categorizedValueMap.get(t)[e[t](i[t])])),t.forEach(t=>{this.categorizedValueMap.set(t,this.categorizedValueMap.get(t).filter(e=>u.filter(i=>i["_"+t]===e).length>0))})}i||(d="select min(Latitude) as minLatitude, max(Latitude) as maxLatitude, count(distinct Latitude) as latitudeCount, min(Longitude) as minLongitude, max(Longitude) as maxLongitude, count(distinct Longitude) as longitudeCount from weather",p=null===(h=this.DB.exec(d))||void 0===h?void 0:h[0],this.datasetInfo=p.values.map(t=>{const e={};for(let i=0;i<t.length;i++)e[p.columns[i]]=+t[i];return e})[0]),await c.dismiss()}return u}obtainDateString(t){switch(t.substring(5)){case"01":return"Jan";case"02":return"Feb";case"03":return"Mar";case"04":return"Apr";case"05":return"May";case"06":return"Jun";case"07":return"Jul";case"08":return"Aug";case"09":return"Sep";case"10":return"Oct";case"11":return"Nov";case"12":return"Dec"}}};h.style=".sc-app-weather-vis-h{display:block}#file-input.sc-app-weather-vis{display:none}s-set-vis.sc-app-weather-vis{height:600px;width:calc(100% - 650px);display:inline-flex}iframe.sc-app-weather-vis{display:inline-block}";export{h as app_weather_vis}